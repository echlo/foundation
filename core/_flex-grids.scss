// A flexbox implementation of grids
@import "mixins/_flex-grids";

// Container elements
.container {	
	@include make-container();
	@include media-breakpoint-above(sm) {
		max-width: 768px; 
	}

	@include media-breakpoint-above(md) { 
		max-width: 960px; 
	}

	@include media-breakpoint-above(lg) {
		max-width: 1160px; 
	}

	@include media-breakpoint-above(xl) {
		max-width: 1340px;
	}	
}

.container-fluid {
	@include make-container();
}

// The columns classes are made here

// First, we make sure the common properties are inherited by all column classes
%column-props {
	@include make-col();
}
@for $i from 1 through $grid-columns {
	@each $size, $val in $grid-sizes {
		$size-class: size-class($size, $val);
		.col#{$size-class}-#{$i} {
			@extend %column-props;
		}
	}
}
.column {
	@extend %column-props;
}

// Then we generate the width and visibility constraints
@each $size, $val in $grid-sizes {
	$size-class: size-class($size, $val);

	@include media-breakpoint-above($size) {
		@for $i from 1 through $grid-columns {
			.col#{$size-class}-#{$i} {			
				@include make-col-span($i);				
			}

			.col#{$size-class}-offset-#{$i} {
				@include make-col-offset($i);
			}
		}

		.hidden#{$size-class} {
			display: none !important;
		}
	}

	@include media-breakpoint-smaller($size, false) {
		.visible#{$size-class} {
			display: none;
		}
	}
}

// Column alignment classes are not wrapped under the column namespaces
@include col-alignment();
@each $size, $val in $grid-sizes {
	@include media-breakpoint-above($size) {
		@at-root {
			@include col-alignment($size);
		}
	}
}

// Row properties
.row {	
	@include make-row();
}

%row-props {
	@include make-row();
}

@for $i from 1 through 6 {
	.row-#{$i} {
		@extend %row-props;
		flex-grow: $i;
	}
}

@each $size, $val in $grid-sizes {
	@include media-breakpoint-above($size) {
		.row, .row-1, .row-2, .row-3, .row-4, .row-5, .row-6 {
			@include row-alignment($size);
		}		
	}
}
